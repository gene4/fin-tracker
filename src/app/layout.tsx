import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ClerkProvider, RedirectToSignIn, SignedOut } from "@clerk/nextjs";
import Head from "next/head";
import { FloatingDock } from "@/components/ui/dock";
import { DialogProvider } from "@/lib/dialog-context";
import { ExpanseModal } from "@/components/expanse-modal";
import { createClient } from "@/utils/supabase/server";
import { Category } from "@/types";

const geistSans = localFont({
    src: "./fonts/GeistVF.woff",
    variable: "--font-geist-sans",
    weight: "100 900",
});
const geistMono = localFont({
    src: "./fonts/GeistMonoVF.woff",
    variable: "--font-geist-mono",
    weight: "100 900",
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const supabase = await createClient();
    const { data: categories } = await supabase
        .from("categories")
        .select()
        .order("name", { ascending: true });

    return (
        <ClerkProvider>
            <html lang="en">
                <Head>
                    <meta name="viewport" content="user-scalable=no" />
                </Head>
                <body
                    className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
                    <SignedOut>
                        <RedirectToSignIn />
                    </SignedOut>
                    <DialogProvider>
                        <div className="flex flex-1 flex-col gap-4 p-4 lg:px-6">
                            {children}
                            <div className="fixed bottom-4 right-4">
                                <FloatingDock
                                    categories={categories as Category[]}
                                />
                            </div>
                        </div>
                        <ExpanseModal />
                    </DialogProvider>
                </body>
            </html>
        </ClerkProvider>
    );
}
